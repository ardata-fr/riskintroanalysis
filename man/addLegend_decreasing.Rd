% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-leaflet.R
\name{addLegend_decreasing}
\alias{addLegend_decreasing}
\title{Leaflet addLegend}
\usage{
addLegend_decreasing(
  map,
  position = c("topright", "bottomright", "bottomleft", "topleft"),
  pal,
  values,
  na.label = "NA",
  bins = 7,
  colors,
  opacity = 0.5,
  labels = NULL,
  labFormat = labelFormat(),
  title = NULL,
  className = "info legend",
  layerId = NULL,
  group = NULL,
  data = getMapData(map),
  decreasing = TRUE
)
}
\arguments{
\item{map}{a map widget object created from \code{\link[leaflet]{leaflet}()}}

\item{position}{the position of the legend}

\item{pal}{the color palette function, generated from
\code{\link[leaflet]{colorNumeric}()}, \code{colorBin()}, \code{colorQuantile()}, or
\code{colorFactor()}}

\item{values}{the values used to generate colors from the palette function}

\item{na.label}{the legend label for \code{NA}s in \code{values}}

\item{bins}{an approximate number of tick-marks on the color gradient for the
\code{colorNumeric} palette if it is of length one; you can also provide a
numeric vector as the pre-defined breaks (equally spaced)}

\item{colors}{a vector of (HTML) colors to be used in the legend if
\code{pal} is not provided}

\item{opacity}{the opacity of colors}

\item{labels}{a vector of text labels in the legend corresponding to
\code{colors}}

\item{labFormat}{a function to format the labels derived from \code{pal} and
\code{values} (see Details below to know what \code{labelFormat()} returns
by default; you can either use the helper function \code{labelFormat()}, or
write your own function)}

\item{title}{the legend title}

\item{className}{extra CSS classes to append to the control, space separated}

\item{layerId}{the ID of the legend; subsequent calls to \code{addLegend}
or \code{addControl} with the same \code{layerId} will replace this
legend. The ID can also be used with \code{removeControl}.}

\item{group}{\code{group} name of a leaflet layer group.
Supplying this value will tie the legend to the leaflet layer group
with this name and will auto add/remove the legend as the
group is added/removed, for example via layerControl.
You will need to set the \code{group} when you add a layer
(e.g. \code{\link[leaflet]{addPolygons}}) and supply the same name here.}

\item{data}{the data object from which the argument values are derived; by
default, it is the \code{data} object provided to \code{leaflet()}
initially, but can be overridden}

\item{decreasing}{make scale decreasing, default = TRUE}
}
\description{
Same as \code{\link[leaflet:addLegend]{leaflet::addLegend()}} but decreasing scale on legend.
}
