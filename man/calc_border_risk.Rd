% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ri-border-risk.R
\name{calc_border_risk}
\alias{calc_border_risk}
\title{Calculate weighted border risk}
\usage{
calc_border_risk(
  epi_units,
  shared_borders,
  emission_risk,
  ...,
  add_html_lables = FALSE
)
}
\arguments{
\item{epi_units}{epidemiological units dataset}

\item{shared_borders}{shared borders dataset as outputted by \code{\link[=calc_border_lengths]{calc_border_lengths()}}}

\item{emission_risk}{emission risk dataset,}

\item{...}{empty}

\item{add_html_lables}{default FALSE, used for leaflet tooltips in the Shiny app.}
}
\value{
A list containing \code{borders} and \code{epi_units}

\strong{epi_units}: a \code{sf} object containing shared borders between EUs and bordering countries,
with calculated border lengths and weights. The table is containing the following columns:
\itemize{
\item \code{eu_id}: ID of the epidemiological unit. This will be used as a join key to the
\code{epi_units} table.
\item \code{eu_name}: Name of the epidemiological unit. This comes from the \code{epi_units} table.
\item \code{borders}: Total length of shared borders with neighbouring countries in km.
\item \code{border_risk}: The risk of introduction based on the emission risk of neighbouring countries,
its values are in the range [0, 12].
\item \code{geometry}: The geometry column containing the shared border, a \code{MULTIPOLYGON}.
}

\strong{borders}: an \code{sf} object containing shared borders between EUs and bordering countries.
The table is containing the following columns:
\itemize{
\item \code{eu_id}: ID of the epidemiological unit.
\item \code{bc_id}: ISO3 of the bordering country.
\item \code{border_length}: Length of the shared border, use \link[units:units]{units::units} to get
the units. It is expected in km.
\item \code{geometry}: The geometry column containing the shared border, a \code{MULTILINESTRING} or a
\code{LINESTRING}.
\item TO BE COMPLETED
}
}
\description{
Calculates the risk of introduction for each epidemiological unit based on the risk of
emission of neighbouring countries. The score is weighted based on the length of
shared borders.
}
\examples{
library(sf)
library(dplyr)

tunisia_raw <- read_sf(system.file(
  package = "riskintrodata",
  "samples", "tunisia", "epi_units", "tunisia_adm2_raw.gpkg"
))

# Apply mapping to prepare colnames and validate dataset
tunisia <- apply_mapping(
  tunisia_raw,
  mapping = mapping_epi_units(
    eu_name = "NAME_2",
    geometry = "geom"
  ),
  validate = TRUE
)

tun_neighbours <- riskintrodata::neighbours_table |>
  filter(country_id == "TUN")

bordering_countries <- riskintrodata::world_sf |>
  filter(iso3 \%in\% tun_neighbours$neighbour_id)
\donttest{
# Run function to get shared borders
shared_borders <- calc_border_lengths(
  epi_units = tunisia,
  eu_id_col = "eu_id",
  bordering_countries = bordering_countries,
  bc_id_col = "iso3"
)
calc_border_risk(
  epi_units = tunisia,
  shared_borders = shared_borders,
  emission_risk = emission_risk_table
)
}
}
