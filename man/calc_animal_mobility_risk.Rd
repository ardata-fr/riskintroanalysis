% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ri-animal-mobility-risk.R
\name{calc_animal_mobility_risk}
\alias{calc_animal_mobility_risk}
\title{Calculate animal mobility risk}
\usage{
calc_animal_mobility_risk(
  animal_mobility,
  emission_risk,
  epi_units,
  method = c("mean", "min", "max"),
  eu_country_iso3 = NULL
)
}
\arguments{
\item{animal_mobility}{animal moblity validated by \code{\link[riskintrodata:validate_dataset]{riskintrodata::validate_dataset()}}}

\item{emission_risk}{emission risk dataset from \link{calc_emission_risk}}

\item{epi_units}{epidemiological units dataset}

\item{method}{aggregation method for eu risk}

\item{eu_country_iso3}{optional parameter to be used when epidemiological units
do not correspond to a country.}
}
\value{
an \code{sf} dataset containing the risk of introduction for each of
the epidemiological units. The dataset has the following columns:
\itemize{
\item \code{eu_id}: epidemiological units identifier
\item \code{eu_name}: epidemiological units name
\item \code{animal_mobility_risk}: risk of introduction through animal mobility
\item \code{geometry}: epidemiological units geometry \code{MULTIPOLYGONS}
}

This dataset also has a \strong{number of attributes} that are used in other
functions from \code{riskintroanalysis} to make passing dataset metadata between
functions more user-friendly.
\enumerate{
\item \code{flows}: an \code{sf} dataset containing the flow destination points, each point
has an aggregated emission risk score that is weighted by \code{quantity}. It contains
the following columns:
\itemize{
\item \code{d_name}: destination name
\item \code{emission_risk_weighted}: weighted emission risk for that point
\item \code{source_label}: HTLM label to be used in leaflet tooltips.
\item \code{geometry}: destination point geometries \code{POINTS}
}
\item \code{risk_col = "animal_mobility_risk"} used by \code{\link[=plot_risk]{plot_risk()}}
\item \code{table_name = "table_name"}used by \code{\link[=plot_risk]{plot_risk()}}
\item \code{scale = c(0, 12)} used by \code{\link[=plot_risk]{plot_risk()}} and \code{\link[=rescale_risk_scores]{rescale_risk_scores()}}
}
}
\description{
Calculate the risk of introduction associated with legal international animal
commerce entering epidemiological units.

Firstly, an aggregated  emission risk is calculated for each destination point.
This is because a destination point can have multiple sources (countries)
giving emission risk.

Then, each destination point is allocated to an epidemiological unit. This is done
by geospatial means, if an destination point is located inside an epidemiological unit's
area it is thus allocated to it.

Finally, now that each destination point has an emission risk and has been paired
with an epidemiological unit, the aggregated risk score for each epidemiological
unit is calculated, giving the final risk of introduction by animal mobility for
each epidemiological unit.
}
\examples{
library(riskintroanalysis)
library(riskintrodata)

animal_mobility_fp <- system.file(
  package = "riskintrodata",
  "samples",
  "tunisia",
  "animal_mobility",
  "ANIMAL_MOBILITY_raw.csv"
)

animal_mobility_raw <- readr::read_csv(animal_mobility_fp)

animal_mobility <- validate_dataset(
  x = animal_mobility_raw,
  table_name = "animal_mobility",
  o_name = "ORIGIN_NAME",
  o_lng = "ORIGIN_LONGITUDE_X",
  o_lat = "ORIGIN_LATITUDE_Y",
  d_name = "DESTINATION_NAME",
  d_lng = "DESTINATION_LONGITUDE_X",
  d_lat = "DESTINATION_LATITUDE_Y",
  quantity = "HEADCOUNT"
) |>
  extract_dataset()

tunisia_raw <- sf::read_sf(system.file(
  package = "riskintrodata",
  "samples",
  "tunisia",
  "epi_units",
  "tunisia_adm2_raw.gpkg"
))

# Apply mapping to prepare colnames and validate dataset
tunisia <- validate_dataset(
  x = tunisia_raw,
  table_name = "epi_units",
  eu_name = "NAME_2",
  geometry = "geom"
) |>
  extract_dataset()

algeria <- erf_row(
  iso3 = "DZA",
  country = "Algeria",
  disease = "Avian infectious laryngotracheitis",
  animal_category = "Domestic",
  species = "Birds",
  disease_notification = 0,
  targeted_surveillance = 1,
  general_surveillance = 0,
  screening = 1,
  precautions_at_the_borders = 1,
  slaughter = 1,
  selective_killing_and_disposal = 1,
  zoning = 1,
  official_vaccination = 1,
  last_outbreak_end_date = as.Date("30/06/2023"),
  commerce_illegal = 0L,
  commerce_legal = 0L
)

libya <- erf_row(
  iso3 = "LBY",
  country = "Libya",
  disease = "Avian infectious laryngotracheitis",
  animal_category = "Domestic",
  species = "Birds",
  disease_notification = TRUE,
  targeted_surveillance = 1,
  general_surveillance = 0,
  screening = 1,
  precautions_at_the_borders = 0,
  slaughter = 1,
  selective_killing_and_disposal = 1,
  zoning = 1,
  official_vaccination = 1,
  last_outbreak_end_date = as.Date("30/06/2019"),
  commerce_illegal = 0L,
  commerce_legal = 1
)

wahis_erf <- get_wahis_erf(
  disease = "Avian infectious laryngotracheitis",
  animal_category = "Domestic",
  species = "Birds"
)

emission_risk_factors <- dplyr::bind_rows(
  algeria,
  libya,
  wahis_erf
)

emission_risk_table <- calc_emission_risk(
  emission_risk_factors = emission_risk_factors
)

ri_animal_mobility <- calc_animal_mobility_risk(
  animal_mobility = animal_mobility,
  emission_risk = emission_risk_table,
  epi_units = tunisia,
  method = "mean"
)

plot_risk(ri_animal_mobility)

extract_flow_risk(ri_animal_mobility)
attributes(ri_animal_mobility)
}
