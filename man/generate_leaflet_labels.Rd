% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-leaflet.R
\name{generate_leaflet_labels}
\alias{generate_leaflet_labels}
\title{Generate HTML Labels for Leaflet Maps}
\usage{
generate_leaflet_labels(
  dat,
  title_field = NULL,
  special_fields = list(),
  source_field = NULL,
  exclude_fields = c(),
  na_string = " - "
)
}
\arguments{
\item{dat}{A data frame or sf object containing the data for labels}

\item{title_field}{Character. Name of the field to use as the label title/header.
Set to NULL to omit title. Default is NULL (no title).}

\item{special_fields}{Named list. Fields that should have special suffixes added
(e.g., list(score = "/10", rating = "/5")). Default is empty list.}

\item{source_field}{Character. Name of the field containing data source information
to display in italics at bottom of table. Set to NULL to omit. Default is NULL (no source).}

\item{exclude_fields}{Character vector. Field names to exclude from the label table.
The title_field and source_field are automatically excluded. Default is empty vector.}

\item{na_string}{Character. String to display for NA values. Default is " - ".}
}
\value{
A list of HTML objects suitable for use with Leaflet's label or popup parameters
}
\description{
Creates styled HTML table labels for Leaflet map popups or tooltips from spatial
or regular data frames. Automatically formats numeric values, truncates long strings,
and converts field names to human-readable labels.
}
\details{
The function creates a styled HTML table with the following formatting:
\itemize{
\item Title field (if specified) appears as a bold header
\item Data fields shown in a two-column table with labels and values
\item Numeric values rounded to 2 decimal places
\item Character values truncated to 47 characters
\item Field names converted from snake_case to Sentence case
\item Source field (if specified) appears in italics at bottom
}
}
\examples{
\dontrun{
# Simplest usage - generates labels for all columns
labels <- generate_leaflet_labels(my_sf_data)

# Basic usage with sf data and custom title
library(sf)
library(leaflet)
library(dplyr)

epi_profile <- get_wahis_erf("Anthrax", "Cattle", "Domestic")
emission_scores <- calc_emission_risk(epi_profile)
sf_data <- left_join(
  x = riskintrodata::world_sf,
  y = emission_scores,
  by = "iso3"
)

# With special field formatting (scores out of maximum values)
labels <- generate_leaflet_labels(
  sf_data,
  title_field = "country_name",
  special_fields = list(
    sc_survmeasures = "/3",
    sc_control = "/2",
    sc_commerce = "/4",
    sc_epistatus = "/3",
    emission_risk = "/12"
  ),
  exclude_fields = c(
    "disease", "country", "iso3",
    "animal_category", "species",
    "country_name_fr"
  ),
  source_field = "data_source"
)

# Use in leaflet map
leaflet(sf_data) \%>\%
  addTiles() \%>\%
  addPolygons(label = labels)

}

}
