% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/risk-table.R
\name{add_risk}
\alias{add_risk}
\title{Add risk to risk table}
\usage{
add_risk(risk_table, risk_data, cols = NULL, scale = NULL, join_by = "eu_id")
}
\arguments{
\item{risk_table}{a risk table initialised with \code{\link[=risk_table]{risk_table()}}}

\item{risk_data}{a data.frame or risk analysis table containing the risk column to
be added to the risk table and the joining column (usually \code{eu_id}).}

\item{cols}{risk columns in \code{risk_data} to add to \code{risk_table}.}

\item{scale}{risk scale for \code{cols} in \code{risk_data}, should be a numeric vector of
length 2 (e.g., \code{c(0, 50)}). This scale must be within the risk_table's scale range.
If not provided, it will be extracted from the \code{risk_data} attributes.}

\item{join_by}{Name of column to be used to join \code{risk_data} to \code{risk_table}.}
}
\value{
the intial risk table with the new risk column added.
}
\description{
Function to be used with risk table to add risk columns. The risk table
is designed to store all risks associated with a riskintro study.
}
\details{
The risk being added must have a scale that is within (a subset of) the risk_table's
scale. For example, if the risk_table has a scale of \code{c(0, 100)}, you can add risks
with scales like \code{c(0, 50)}, \code{c(20, 80)}, or \code{c(0, 100)}. However, you cannot add
a risk with scale \code{c(0, 120)} or \code{c(-10, 50)} as these exceed the risk_table's range.

Once added, the risk column inherits the risk_table's scale attribute, regardless of
its original scale. This allows risks with different scales to coexist in the same
risk_table, as long as their values fit within the risk_table's scale range.

Users are responsible for using \code{\link[=rescale_risk_scores]{rescale_risk_scores()}} to ensure risk values are
appropriately scaled before adding them to the risk_table.
}
\examples{
library(riskintrodata)
library(riskintroanalysis)

# Get epi_units dataset
tunisia_raw <- sf::read_sf(system.file(
  package = "riskintrodata",
  "samples",
  "tunisia",
  "epi_units",
  "tunisia_adm2_raw.gpkg"
))

# Apply mapping to prepare colnames and validate dataset
tunisia <- validate_dataset(
  x = tunisia_raw,
  table_name = "epi_units",
  eu_name = "NAME_2",
  geometry = "geom"
) |>
  extract_dataset()

# Create risk table
rt <- risk_table(tunisia, scale = c(0, 100))

# Create risk
entry_points_fp <-
  system.file(
    package = "riskintrodata",
    "samples",
    "tunisia",
    "entry_points",
    "BORDER_CROSSING_POINTS.csv"
  )

entry_points <- readr::read_csv(entry_points_fp)
entry_points <- validate_dataset(
  x = entry_points,
  table_name = "entry_points",
  point_name = "NAME",
  lng = "LONGITUDE_X",
  lat = "LATITUDE_Y",
  mode = "MODE",
  type = "TYPE",
  sources = "SOURCES"
) |>
  extract_dataset()

ri_entry_points <- calc_entry_point_risk(
  entry_points = entry_points,
  epi_units = tunisia,
  emission_risk = calc_emission_risk(
    emission_risk_factors = get_wahis_erf(
      disease = "Anthrax",
      species = "Cattle",
      animal_category = "Domestic"
    )
  )
) |>
  rescale_risk_scores()

rt <- add_risk(risk_table = rt, risk_data = ri_entry_points)
rt

rt <- remove_risk(rt, cols = "entry_points_risk")
rt
}
\seealso{
Other risk-table: 
\code{\link{remove_risk}()},
\code{\link{risk_table}()}
}
\concept{risk-table}
